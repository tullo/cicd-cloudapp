# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Cloud Application Main Branch Build

on:
  push:
    branches:
      - main

env:
  DOCKER_REGISTRY: tullo.jfrog.io/default-docker-virtual
  DOCKER_IMAGE: tullo.jfrog.io/default-docker-virtual/cicd-cloudapp

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.1
        with:
          java-version: "17"
          distribution: "adopt"
          cache: maven

      - name: Build with Maven
        run: ./mvnw -B test

      - name: Bump version
        run: |
          git config --global user.email "github+actions@gmail.com"
          git config --global user.name "Actions"
          git fetch --tags
          wget -O - https://raw.githubusercontent.com/treeder/bump/master/gitbump.sh | bash
          echo "VERSION=$(git tag --sort=-v:refname --list "v[0-9]*" | head -n 1 | cut -c 2-)" >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx

      - name: Login to jfrog.io
        uses: docker/login-action@v3
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: ${{ secrets.JFROG_USER }}
          password: ${{ secrets.JFROG_ACCESS_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: |
            ${{ env.DOCKER_IMAGE }}:${{ env.VERSION }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

        # This ugly bit is necessary if you don't want your cache to grow forever
        # till it hits GitHub's limit of 5GB.
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move buildx cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Publish Helm chart
        uses: stefanprodan/helm-gh-pages@master
        with:
          # https://github.com/settings/tokens create 'helm-charts (push)'
          token: ${{ secrets.CHART_TOKEN }}
          charts_dir: helm
          charts_url: https://tullo.github.io/helm-charts/
          repository: helm-charts
          branch: gh-pages
          app_version: ${{ env.VERSION }}
          chart_version: ${{ env.VERSION }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy
        uses: WyriHaximus/github-action-helm3@v4
        with:
          exec: |
            helm repo add tullo https://tullo.github.io/helm-charts/
            helm repo update
            helm search repo tullo
#           helm upgrade chart-1642000328 tullo/cloud-application-java --install --atomic --wait
#         kubeconfig: "${{ secrets.KUBECONFIG }}" (deployment disabled for now)
